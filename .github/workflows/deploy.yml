name: Deploy Serverless App (S3 + Lambda)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1                 # your region
      S3_BUCKET: ftm1-s3-eu        # your S3 bucket
      DISTRIBUTION_ID: EGHJFIL6SA7PK   # your CloudFront ID
      LAMBDA_NAME: ft1-backend-lambda          # your Lambda name
      API_GATEWAY_ID: uqgweqh0j6            # your API Gateway ID (important!)
      STAGE_NAME: prod                      # stage name in API Gateway (usually prod)

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------- FRONTEND ----------
      - name: Get API Gateway URL
        id: apigateway
        run: |
          GATEWAY_URL="https://${API_GATEWAY_ID}.execute-api.${AWS_REGION}.amazonaws.com/${STAGE_NAME}"
          echo "API_URL=$GATEWAY_URL" >> $GITHUB_ENV
          echo "âœ… API Gateway URL: $GATEWAY_URL"

      - name: Inject API URL into frontend .env.production
        working-directory: client
        run: |
          echo "VITE_API_URL=${API_URL}" > .env.production
          cat .env.production

      - name: Build frontend
        working-directory: client
        run: |
          npm ci
          npm run build

      - name: Deploy to S3
        uses: aws-actions/s3-sync@v2
        with:
          bucket: ${{ env.S3_BUCKET }}
          region: ${{ env.AWS_REGION }}
          source: client/dist
          delete: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront cache
        uses: awact/cloudfront-action@v1.3
        with:
          distribution-id: ${{ env.DISTRIBUTION_ID }}
          aws-region: ${{ env.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # ---------- BACKEND ----------
      - name: Zip backend
        run: |
          cd server
          zip -r ../lambda.zip . -x "node_modules/*" "*.env" ".git/*" ".history/*"

      - name: Deploy to Lambda
        uses: appleboy/lambda-action@v0.2.0
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          function_name: ${{ env.LAMBDA_NAME }}
          zip_file: lambda.zip

